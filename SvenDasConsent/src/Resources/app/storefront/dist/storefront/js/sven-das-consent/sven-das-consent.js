(()=>{var e={876:()=>{document.addEventListener("DOMContentLoaded",function(){let e=document.querySelector(".cookie-overlay-on"),n=document.querySelector(".cookie-permission-container");if(!e||!n){console.log("Overlay or cookie banner not found.");return}function o(){!function(){let e=n.style.display,o=window.getComputedStyle(n).display;return"none"===e||"none"===o}()?(e.style.display="",setTimeout(()=>{e.classList.add("visible"),console.log("Overlay is now visible after delay.")},500)):(e.style.display="none",console.log("Overlay hidden because cookie banner is hidden."))}o(),new MutationObserver(o).observe(n,{attributes:!0,attributeFilter:["style","class"]}),console.log("Mutation observer set up for cookie banner.")})}},n={};function o(t){var r=n[t];if(void 0!==r)return r.exports;var i=n[t]={exports:{}};return e[t](i,i.exports,o),i.exports}(()=>{o.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n}})(),(()=>{o.d=(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}})(),(()=>{o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n)})(),(()=>{"use strict";o(876);let e=window.PluginManager;class n extends Plugin{init(){super.init(),console.log("SvenDasConsent plugin initialized")}}e.register("SvenDasConsent",n,"[data-sven-das-consent]")})()})();